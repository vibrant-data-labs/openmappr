.snap-side-panel.flex-transclude.height-100
    .panel-container.flex-vert-container.width-100
        //fixed height because slight jump with flexbox if one tab scrolls and another doesn't
        .snap-header
            .snap-title {{currentSnap.snapName}}
        .line-row
            .line
            .line-active
        .panel-scroll.flex-fill.flex-vert-container
            div.snap-item(ng-repeat="snap in snapshots | filter: {isEnabled: true} track by snap.id" ng-click="setSnapActive(snap)")
                .snap-summary
                    img(ng-src="{{'https://i.ibb.co/HxZprqH/fruits.png'}}")
                    .snap-info
                        .snap-info-title {{snap.snapName}}
                        .snap-info-subtitle {{'werewrwerte rtewelkrjw lekjrlwjker lkwjerlkjwel krjlwkejrl wekrjlwkerjlkwe werwerwer werwerw'}}
                .snap-desc {{'werewrwerte rtewelkrjw lekjrlwjker lkwjerlkjwel krjlwkejrl wekrjlwkerjlkwe werwerwer werwerw lkwjerlkjwel krjlwkejrl wekrjlwkerjlkwe werwerwer werwerw lkwjerlkjwel krjlwkejrl wekrjlwkerjlkwe werwerwer werwerw lkwjerlkjwel krjlwkejrl wekrjlwkerjlkwe werwerwer werwerw'}}
                
            //- uib-tabset.flex-vert-container(justified="true" progressive-render="", render-processes="7", render-gap="150")
            //-     uib-tab
            //-         uib-tab-heading
            //-             span
            //-                 i.fa.fa-circle
            //-         .width-100.over-hidden
            //-             .header
            //-                 .row.vert-align
            //-                     .col-xs-9
            //-                         h6.title.text-uppercase {{layoutUI.nodeTab.header.title}}
            //-                     .col-xs-3
            //-                         .bool(uib-tooltip="Show/Hide {{layoutUI.nodeTab.header.title}}" tooltip-placement="right" tooltip-append-to-body="true")
            //-                             .onoffswitch
            //-                                 input.onoffswitch-checkbox(id='settings-switch-{{layoutUI.nodeTab.header.title}}', type='checkbox', ng-model='mapprSettings[layoutUI.nodeTab.header.key]', ng-change='layoutUI.setupLayoutChange(layoutUI.nodeTab.header);')
            //-                                 label.onoffswitch-label(for='settings-switch-{{layoutUI.nodeTab.header.title}}')
            //-                                     .onoffswitch-inner
            //-                                     .onoffswitch-switch
            //-             .panel-list.flex-fill.panel-scroll.flex-vert-container
            //-                 .panel-item.style-panel-item.no-hover(ng-if="renderProcesses.process1.shouldLoad", ng-repeat = "section in layoutUI.nodeTab.renderSettings | toArray")
            //-                     h6.title.text-uppercase {{section.$key}}
            //-                     ul.panel-sublist.list-unstyled
            //-                         li.panel-subitem(ng-repeat="opt in section", ng-mouseenter='layoutUI.setHoverSetting(opt)', ng-show='opt.enabled', ng-class='layoutUI.getClass(opt)', ng-click="$event.stopPropagation()")
            //-                             .row.vert-align(ng-if='opt.type != "color-p"')
            //-                                 .col-xs-5.vert-align
            //-                                     h6.pull-left(ng-if='opt.title!=""') {{opt.title}}&nbsp;&nbsp;&nbsp;
            //-                                     .pull-left
            //-                                         i.fa.fa-info-circle(uib-tooltip="{{opt.tooltip}}" tooltip-placement="right" tooltip-append-to-body="true")
            //-                                 .col-xs-7(ng-if='opt.type != "color-p"')
            //-                                     settings-input(opt="opt", attrs="nodeAttrs" attr-filter="filterNodeAttrs(opt)" color-change="updateColors()" ng-model="mapprSettings[opt.key]")
            //-                             div(ng-if='opt.type == "color-p"')
            //-                                 .row.vert-align
            //-                                     .col-xs-12.vert-align
            //-                                         h6.pull-left(ng-if='opt.title!=""') {{opt.title}}
            //-                                         .pull-left
            //-                                             i.fa.fa-info-circle(uib-tooltip="{{opt.tooltip}}" tooltip-placement="right" tooltip-append-to-body="true")
            //-                                 .row
            //-                                     .col-xs-12
            //-                                         color-picker(colors='mapprSettings[opt.key]', editable='true' ng-if='opt.type == "color-p"')
            //-     uib-tab.panel-content
            //-         uib-tab-heading
            //-             span
            //-                 i.fa.fa-expand
            //-         .width-100.over-hidden
            //-             .header
            //-                 .row.vert-align
            //-                     .col-xs-9
            //-                         h6.title.text-uppercase {{layoutUI.edgeTab.header.title}}
            //-                     .col-xs-3
            //-                         .bool(uib-tooltip="Show/Hide {{layoutUI.edgeTab.header.title}}" tooltip-placement="right" tooltip-append-to-body="true")
            //-                             .onoffswitch
            //-                                 input.onoffswitch-checkbox(id='settings-switch-{{layoutUI.edgeTab.header.title}}', type='checkbox', ng-model='mapprSettings[layoutUI.edgeTab.header.key]', ng-change='layoutUI.setupLayoutChange(layoutUI.edgeTab.header);')
            //-                                 label.onoffswitch-label(for='settings-switch-{{layoutUI.edgeTab.header.title}}')
            //-                                     .onoffswitch-inner
            //-                                     .onoffswitch-switch
            //-             .panel-list.flex-fill.panel-scroll.flex-vert-container
            //-                 .panel-item.no-hover(ng-if="renderProcesses.process2.shouldLoad", ng-repeat = "section in layoutUI.edgeTab.renderSettings | toArray")
            //-                     h6.title.text-uppercase {{section.$key}}
            //-                     ul.panel-sublist.list-unstyled
            //-                         li.panel-subitem(ng-repeat="opt in section", ng-mouseenter='layoutUI.setHoverSetting(opt)', ng-show='opt.enabled', ng-class='layoutUI.getClass(opt)', ng-click="$event.stopPropagation()")
            //-                             .row.vert-align(ng-if='opt.type != "color-p"')
            //-                                 .col-xs-5.vert-align
            //-                                     h6.pull-left(ng-if='opt.title!=""') {{opt.title}}&nbsp;&nbsp;&nbsp;
            //-                                     .pull-left
            //-                                         i.fa.fa-info-circle(uib-tooltip="{{opt.tooltip}}" tooltip-placement="right" tooltip-append-to-body="true")
            //-                                 .col-xs-7(ng-if='opt.type != "color-p"')
            //-                                     settings-input(opt="opt", attrs="edgeAttrs" attr-filter="filterEdgeAttrs(opt)" color-change="updateColors()" ng-model="mapprSettings[opt.key]")
            //-                             div(ng-if='opt.type == "color-p"')
            //-                                 .row.vert-align
            //-                                     .col-xs-12.vert-align
            //-                                         h6.pull-left(ng-if='opt.title!=""') {{opt.title}}
            //-                                         .pull-left
            //-                                             i.fa.fa-info-circle(uib-tooltip="{{opt.tooltip}}" tooltip-placement="right" tooltip-append-to-body="true")
            //-                                 .row
            //-                                     .col-xs-12
            //-                                         color-picker(colors='mapprSettings[opt.key]' editable='true' ng-if='opt.type == "color-p"')
            //-     uib-tab.panel-content
            //-         uib-tab-heading
            //-             span
            //-                 i.fa.fa-font
            //-         .width-100.over-hidden
            //-             .header
            //-                 .row.vert-align
            //-                     .col-xs-9
            //-                         h6.title.text-uppercase {{layoutUI.labelTab.header.title}}
            //-                     .col-xs-3
            //-                         .bool(uib-tooltip="Show/Hide {{layoutUI.labelTab.header.title}}" tooltip-placement="right" tooltip-append-to-body="true")
            //-                             .onoffswitch
            //-                                 input.onoffswitch-checkbox(id='settings-switch-{{layoutUI.labelTab.header.title}}', type='checkbox', ng-model='mapprSettings[layoutUI.labelTab.header.key]', ng-change='layoutUI.setupLayoutChange(layoutUI.labelTab.header);')
            //-                                 label.onoffswitch-label(for='settings-switch-{{layoutUI.labelTab.header.title}}')
            //-                                     .onoffswitch-inner
            //-                                     .onoffswitch-switch
            //-             .panel-list.flex-fill.panel-scroll.flex-vert-container
            //-                 .panel-item.no-hover(ng-if="renderProcesses.process3.shouldLoad", ng-repeat = "section in layoutUI.labelTab.renderSettings | toArray")
            //-                     h6.title.text-uppercase {{section.$key}}
            //-                     ul.panel-sublist.list-unstyled
            //-                         li.panel-subitem(ng-repeat="opt in section", ng-mouseenter='layoutUI.setHoverSetting(opt)', ng-show='opt.enabled', ng-class='layoutUI.getClass(opt)', ng-click="$event.stopPropagation()")
            //-                             .row.vert-align
            //-                                 .col-xs-5.vert-align
            //-                                     h6.pull-left(ng-if='opt.title!=""') {{opt.title}}&nbsp;&nbsp;&nbsp;
            //-                                     .pull-left
            //-                                         i.fa.fa-info-circle(uib-tooltip="{{opt.tooltip}}" tooltip-placement="right" tooltip-append-to-body="true")
            //-                                 .col-xs-7
            //-                                     settings-input(opt="opt", attrs="nodeAttrs" attr-filter="filterNodeAttrs(opt)" color-change="updateColors()" ng-model="mapprSettings[opt.key]")
            //-     uib-tab.panel-content
            //-         uib-tab-heading
            //-             span
            //-                 i.fa.fa-cogs
            //-         .width-100.over-hidden
            //-             .header
            //-                 .row.vert-align
            //-                     .col-xs-9
            //-                         h6.title.text-uppercase Miscellaneous
            //-             .panel-list.flex-fill.panel-scroll.flex-vert-container
            //-                 uib-accordion(close-others="spAccordionStatus.misc.closeOthers")
            //-                     uib-accordion-group(is-disabled="!mapprSettings.drawNodes", is-open="spAccordionStatus.misc.aggregations")
            //-                         uib-accordion-heading
            //-                             .row.vert-align
            //-                                 .col-xs-12
            //-                                     i.fa.fa-ellipsis-v.fa-fw
            //-                                     span(uib-tooltip="Define how Nodes are Clustered" tooltip-placement="right" tooltip-append-to-body="true") Aggregations
            //-                         div(ng-if="renderProcesses.process4.shouldLoad", ng-repeat = "section in layoutUI.nodeTab.aggregations | toArray")
            //-                             .row.vert-align
            //-                                 .col-xs-12
            //-                                     h6.title.text-uppercase {{section.$key}}
            //-                             ul.panel-sublist.list-unstyled
            //-                                 li.panel-subitem(ng-repeat="opt in section", ng-mouseenter='layoutUI.setHoverSetting(opt)', ng-show='opt.enabled', ng-class='layoutUI.getClass(opt)', ng-click="$event.stopPropagation()")
            //-                                     .row.vert-align
            //-                                         .col-xs-5.vert-align
            //-                                             h6.pull-left(ng-if='opt.title!=""') {{opt.title}}&nbsp;&nbsp;&nbsp;
            //-                                             .pull-left
            //-                                                 i.fa.fa-info-circle(uib-tooltip="{{opt.tooltip}}" tooltip-placement="right" tooltip-append-to-body="true")
            //-                                         .col-xs-7
            //-                                             settings-input(opt="opt", attrs="nodeAttrs" attr-filter="filterNodeAttrs(opt)" color-change="updateColors()" ng-model="mapprSettings[opt.key]")
            //-                     uib-accordion-group(is-open="spAccordionStatus.misc.stage")
            //-                         uib-accordion-heading
            //-                             .row.vert-align
            //-                                 .col-xs-12
            //-                                     i.fa.fa-ellipsis-v.fa-fw
            //-                                     span Stage
            //-                         div(ng-if="renderProcesses.process5.shouldLoad", ng-repeat = "section in layoutUI.settingsTab.stage | toArray")
            //-                             .row.vert-align
            //-                                 .col-xs-12
            //-                                     h6.title.text-uppercase  {{section.$key}}
            //-                             ul.panel-sublist.list-unstyled
            //-                                 li.panel-subitem(ng-repeat="opt in section", ng-mouseenter='layoutUI.setHoverSetting(opt)', ng-show='opt.enabled', ng-class='layoutUI.getClass(opt)', ng-click="$event.stopPropagation()")
            //-                                     .row.vert-align
            //-                                         .col-xs-5.vert-align
            //-                                             h6.pull-left(ng-if='opt.title!=""') {{opt.title}}&nbsp;&nbsp;&nbsp;
            //-                                             .pull-left
            //-                                                 i.fa.fa-info-circle(uib-tooltip="{{opt.tooltip}}" tooltip-placement="right" tooltip-append-to-body="true")
            //-                                         .col-xs-7
            //-                                             settings-input(ng-if="::opt.owner != 'project'", opt="opt", attrs="nodeAttrs" attr-filter="filterNodeAttrs(opt)" color-change="updateColors()" ng-model="mapprSettings[opt.key]")
            //-                                             settings-input(ng-if="::opt.owner == 'project'", opt="opt", ng-model="projSettings[opt.key]", update-project-setting="updateProjectSettings(opt.key)")
            //-                     uib-accordion-group(is-open="spAccordionStatus.misc.exports")
            //-                         uib-accordion-heading
            //-                             .row.vert-align
            //-                                 .col-xs-12
            //-                                     i.fa.fa-ellipsis-v.fa-fw
            //-                                     span Export Image
            //-                         div
            //-                             .row.vert-align
            //-                                 .col-xs-12
            //-                                     h6.title.text-uppercase  Export Image
            //-                             ul.panel-sublist.list-unstyled
            //-                                 li.panel-subitem(ng-click="$event.stopPropagation()")
            //-                                     .row.vert-align
            //-                                         button.btn.btn-default.btn-xs.pull-left(type="button", ng-click="project.renderSvg()") Render SVG
            //-                     uib-accordion-group(is-open="spAccordionStatus.misc.extract_data")
            //-                         uib-accordion-heading
            //-                             .row.vert-align
            //-                                 .col-xs-12
            //-                                     i.fa.fa-ellipsis-v.fa-fw
            //-                                     span ETL extractions
            //-                         div(ng-controller="HacksCardCtrl")
            //-                             .row.vert-align
            //-                                 .col-xs-12
            //-                                     h6.title.text-uppercase  Export Users of selected merchants
            //-                             ul.panel-sublist.list-unstyled
            //-                                 li.panel-subitem(ng-click="$event.stopPropagation()")
            //-                                     .row.vert-align
            //-                                         button.btn.btn-default.btn-xs.pull-left(type="button", ng-click="exportUsersOfMerchants()") run Script
            //-                             .row.vert-align
            //-                                 .col-xs-12
            //-                                     h6.title.text-uppercase  Export Users of all clusters
            //-                             ul.panel-sublist.list-unstyled
            //-                                 li.panel-subitem(ng-click="$event.stopPropagation()")
            //-                                     .row.vert-align
            //-                                         button.btn.btn-default.btn-xs.pull-left(type="button", ng-click="exportClusterUsers()") export users for every cluster
