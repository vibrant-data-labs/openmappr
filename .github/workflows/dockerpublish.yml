name: Docker build and push

# If anything is PUSHED to master or staging.
# If anything is PULLED to staging.
# Trigger the following actions

on:
  push:
    branches:
      - master
      - staging
      - development
      - blackstone
      - theogroup
      - sharp-master

  pull_request:
    branches:
      # The master branch does not need to rebuild here
      - staging
      - development
      - blackstone
      - theogroup
      - sharp-master

env:
  IMAGE_NAME: openmappr

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

# Scan the repos to make sure there are no API keys, or other sensitive information getting pushed.

      - name: Scan for secrets (1/2) • Yelp/detect-secrets 
        uses: evanextreme/detect-secrets-action@1.0.0

# Check to see that the openmappr_web image builds succesfully

      - name: Check docker build openmappr_web
        run: docker build . --file Dockerfile --tag openmappr_web --build-arg script_file='run_docker_mode'

# Check to see that the openmappr_athena image builds succesfully

      - name: Check docker build openmappr_athena
        run: |
          cd ./athena
          docker build . --file Dockerfile --tag openmappr_athena --build-arg script_file='run_docker_mode'
      - name: Log into Dockerhub Container Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_EMAIL }} --password-stdin
      
# Add a label for each container

      - name: Publish openmappr_web image to Dockerhub Registry
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [ "$VERSION" == "master" ] && VERSION=latest
          [ "$VERSION" == "staging" ] && VERSION=staging
          [ "$VERSION" == "development" ] && VERSION=development
          [ "$VERSION" == "blackstone" ] && VERSION=blackstone    
          [ "$VERSION" == "theogroup" ] && VERSION=theogroup
          [ "$VERSION" == "sharp-master" ] && VERSION=sharp-master
          echo VERSION=$VERSION
          docker tag openmappr_web openmapprimages/openmappr_web:$VERSION
          docker push openmapprimages/openmappr_web:$VERSION

# Add a label for each container
# The list of images to publish on Dockerhub

      - name: Publish openmappr_athena image to Dockerhub Registry
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [ "$VERSION" == "master" ] && VERSION=latest
          [ "$VERSION" == "staging" ] && VERSION=staging
          [ "$VERSION" == "development" ] && VERSION=development
          [ "$VERSION" == "blackstone" ] && VERSION=blackstone
          [ "$VERSION" == "theogroup" ] && VERSION=theogroup
          [ "$VERSION" == "sharp-master" ] && VERSION=sharp-master
          echo VERSION=$VERSION
          docker tag openmappr_athena openmapprimages/openmappr_athena:$VERSION
          docker push openmapprimages/openmappr_athena:$VERSION

#           Tell Cloudflare to purge their cache
# ➜  I leave this off until we hit a formal development cycle

#      - name: Purge cache from Cloudflare
#        uses: jakejarvis/cloudflare-purge-action@master
#        env:
#          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
#          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}     
